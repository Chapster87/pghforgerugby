{"version":3,"sources":["ie.scss","partials/_variables.scss","partials/_typography.scss","partials/_mixins.scss","partials/_ie_grid.scss"],"names":[],"mappings":"AAAA;;;;;;;;;;;mEAWmE;AAGnE;;;;;;mEAMmE;ACpBnE;;;;;;;;;;;mEAWmE;AAEnE;;sBAEsB;AAmCtB;;;;sBAIsB;AAgCtB;;;;EAIE;AC1FF;;;;;;;;;;;;;;;mEAemE;AAGnE;;sBAEsB;AAEtB;;;;;;EAME;AAEF;;;;;;;;;;EAUE;AAEF;EACC,iCAAiC;EACjC,wIACyD;EACzD,oBAAoB;EACpB,mBAAmB,EAAA;;AAGpB;EACC,yCAAyC;EACzC,oJAC+D;EAC/D,oBAAoB;EACpB,mBAAmB,EAAA;;AAGpB;EACC,8BAA8B;EAC9B,gJAC6D;EAC7D,oBAAoB;EACpB,mBAAmB,EAAA;;AAGpB;EACC,sCAAsC;EACtC,4JACmE;EACnE,oBAAoB;EACpB,mBAAmB,EAAA;;AAGpB;EACC,+BAA+B;EAC/B,kJAC8D;EAC9D,oBAAoB;EACpB,mBAAmB,EAAA;;AAGpB;EACC,uCAAuC;EACvC,8JACoE;EACpE,oBAAoB;EACpB,mBAAmB,EAAA;;AAIpB;;;;EAIE;AAgBF;;;EAGE;AACF;EACE,0BAA0B;EAC1B,uBAAuB;EACvB,sBAAsB;EAEtB,sBAAsB;EAEpB,kBAAc;MAAd,cAAc;EAEhB,4BAA4B;EAC3B,2BAA2B;EACzB,mBAAmB;EACtB;;;;;;GAMC,EACF;;ACtID;;;;;;;;;;;;;;;;;;;;mEAoBmE;AAGnE;;sBAEsB;AAEtB;;;;;EAKE;AAUF;;;;sBAIsB;AAEtB,6CAA6C;AAU7C;;sBAEsB;AAEtB,sCAAsC;AACtC;iEACiE;AChEjE;;;;;;;;;;;;;mEAamE;AJcnE;;EAEE;AAGF;;;;;;mEAMmE;AAEnE;;;;;;;;;;;;EAYE","file":"ie.css","sourcesContent":["/******************************************************************\r\nSite Name: Pittsburgh Forge Rugby Club\r\nAuthor: Andrew Chapman\r\n\r\nStylesheet: IE Stylesheet\r\n\r\nSo instead of using the respond.js file to add media query support\r\nto IE, we're going to use SASS to create an easily readable css file.\r\nHere, we import all the styles the standard stylesheet gets, only\r\nwithout the media queries. No need to worry about editing anything!\r\n\r\n******************************************************************/\r\n\r\n\r\n/******************************************************************\r\nIMPORTS & DEPENDENCIES\r\nRemember, all the BASE styles are called already since IE can\r\nread those. Below, we need to import only the stuff IE can't\r\nunderstand (what's inside the media queries). We also need to\r\nimport the mixins file so SASS can understand the variables.\r\n******************************************************************/\r\n\r\n@import \"partials/variables\"; // import variables\r\n@import \"partials/typography\"; // import typography\r\n@import \"partials/mixins\"; // import mixins\r\n@import \"partials/ie_grid\"; // import grid\r\n\r\n/*\r\nyou can call the larger styles if you want, but there's really no need\r\n*/\r\n\r\n\r\n/******************************************************************\r\nADDITIONAL IE FIXES\r\nThese fixes are now ONLY seen by IE, so you don't have to worry\r\nabout using prefixes, although it's best practice. For more info\r\non using Modernizr classes, check out this link:\r\nhttp://www.modernizr.com/docs/\r\n******************************************************************/\r\n\r\n/*\r\nFor example, you can use something like:\r\n\r\n.no-textshadow .class { ... }\r\n\r\nYou can also target specific versions by using the classes applied to\r\nthe html element. These can sometimes change, so take a look inside the\r\nheader.php file to see what they are:\r\n\r\n\r\n.lt-ie8 .class { ... }\r\n\r\n*/\r\n","/******************************************************************\r\nSite Name: Pittsburgh Forge Rugby Club\r\nAuthor: Andrew Chapman\r\n\r\nStylesheet: Variables\r\n\r\nHere is where we declare all our variables like colors, fonts,\r\nbase values, and defaults. We want to make sure this file ONLY\r\ncontains variables that way our files don't get all messy.\r\nNo one likes a mess.\r\n\r\n******************************************************************/\r\n\r\n/*********************\r\nBreakpoint Mixins\r\n*********************/\r\n\r\n@mixin breakpoint($point) {\r\n\t@if $point == desktop {\r\n\t\t@media screen and (min-width:64.0625em) { @content ; } // (1025px and up)\r\n\t}\r\n\t@else if $point == lgTabletUp {\r\n\t\t@media screen and ( min-width:60em) { @content ; } // (960px and up)\r\n\t}\r\n\t@else if $point == tabletUp {\r\n\t\t@media screen and (min-width:48em) { @content ; } // (768px and up)\r\n\t}\r\n\t@else if $point == tablet {\r\n\t\t@media screen and ( min-width:48em) and (max-width:64em) { @content ; } // (768px - 1024px)\r\n\t}\r\n\t@else if $point == lgTablet {\r\n\t\t@media screen and ( min-width:60em) and (max-width:64em) { @content ; } // (960px - 1024px)\r\n\t}\r\n\t@else if $point == smDesktop {\r\n\t\t@media screen and ( min-width:60em) and (max-width:75em) { @content ; } // (960px - 1200px)\r\n\t}\r\n\t@else if $point == smTablet {\r\n\t\t@media screen and ( min-width:48em) and (max-width:59.9375em) { @content ; } // (768px - 959px)\r\n\t}\r\n\t@else if $point == lgMobileUp {\r\n\t\t@media screen and ( min-width:30.063em){ @content ; } // (481px and up)\r\n\t}\r\n\t@else if $point == lgMobile {\r\n\t\t@media screen and ( min-width:30em) and (max-width:47.9375em) { @content ; } // (480px - 767px)\r\n\t}\r\n\t@else if $point == smMobile {\r\n\t\t@media screen and (max-width:20em) { @content ; } // (up to 320px)\r\n\t}\r\n}\r\n\r\n/*********************\r\nCOLORS\r\nNeed help w/ choosing your colors? Try this site out:\r\nhttp://0to255.com/\r\n*********************/\r\n\r\n$alert-yellow:      #ebe16f;\r\n$alert-red:         #fbe3e4;\r\n$alert-green:       #e6efc2;\r\n$alert-blue:        #d5edf8;\r\n\r\n$forge-gold:\t\t#FFB81C;\r\n\r\n$black:             #000;\r\n$ltblack:\t\t#222;\r\n$white:             #fff;\r\n\r\n$light-gray:        #f8f9fa;\r\n$gray:              #eaedf2;\r\n$text-color:        $black;\r\n$meta-gray:         #9fa6b4;\r\n\r\n$tan:               #eceee5;\r\n\r\n$green:             #7dd667;\r\n\r\n$bones-pink:        #f01d4f;\r\n$blue:              #2980b9;\r\n\r\n$link-color:        $forge-gold;\r\n$link-hover:        darken($link-color, 9%);\r\n\r\n$border-color:      #ccc;\r\n$disabled-gray:     #cfcfcf;\r\n\r\n\r\n/*\r\nHere's a great tutorial on how to\r\nuse color variables properly:\r\nhttp://sachagreif.com/sass-color-variables/\r\n*/\r\n","/******************************************************************\r\nSite Name:\r\nAuthor:\r\n\r\nStylesheet: Typography\r\n\r\nNeed to import a font or set of icons for your site? Drop them in\r\nhere or just use this to establish your typographical grid. Or not.\r\nDo whatever you want to...GOSH!\r\n\r\nHelpful Articles:\r\nhttp://trentwalton.com/2012/06/19/fluid-type/\r\nhttp://ia.net/blog/responsive-typography-the-basics/\r\nhttp://alistapart.com/column/responsive-typography-is-a-physical-discipline\r\n\r\n******************************************************************/\r\n\r\n\r\n/*********************\r\nFONT FACE (IN YOUR FACE)\r\n*********************/\r\n\r\n/*  To embed your own fonts, use this syntax\r\n  and place your fonts inside the\r\n  library/fonts folder. For more information\r\n  on embedding fonts, go to:\r\n  http://www.fontsquirrel.com/\r\n  Be sure to remove the comment brackets.\r\n*/\r\n\r\n/*  @font-face {\r\n\t  font-family: 'Font Name';\r\n\t  src: url('library/fonts/font-name.eot');\r\n\t  src: url('library/fonts/font-name.eot?#iefix') format('embedded-opentype'),\r\n\t\t\t url('library/fonts/font-name.woff') format('woff'),\r\n\t\t\t url('library/fonts/font-name.ttf') format('truetype'),\r\n\t\t\t url('library/fonts/font-name.svg#font-name') format('svg');\r\n\t  font-weight: normal;\r\n\t  font-style: normal;\r\n  }\r\n*/\r\n\r\n@font-face {\r\n\tfont-family: 'lemonmilk-regular';\r\n\tsrc: url('../fonts/lemonmilk/lemonmilk-webfont.woff2') format('woff2'),\r\n\t\t url('../fonts/lemonmilk/lemonmilk-webfont.woff') format('woff');\r\n\tfont-weight: normal;\r\n\tfont-style: normal;\r\n}\r\n\r\n@font-face {\r\n\tfont-family: 'lemonmilk-regular__italic';\r\n\tsrc: url('../fonts/lemonmilk/lemonmilkitalic-webfont.woff2') format('woff2'),\r\n\t\t url('../fonts/lemonmilk/lemonmilkitalic-webfont.woff') format('woff');\r\n\tfont-weight: normal;\r\n\tfont-style: normal;\r\n}\r\n\r\n@font-face {\r\n\tfont-family: 'lemonmilk-bold';\r\n\tsrc: url('../fonts/lemonmilk/lemonmilkbold-webfont.woff2') format('woff2'),\r\n\t\t url('../fonts/lemonmilk/lemonmilkbold-webfont.woff') format('woff');\r\n\tfont-weight: normal;\r\n\tfont-style: normal;\r\n}\r\n\r\n@font-face {\r\n\tfont-family: 'lemonmilk-bold__italic';\r\n\tsrc: url('../fonts/lemonmilk/lemonmilkbolditalic-webfont.woff2') format('woff2'),\r\n\t\t url('../fonts/lemonmilk/lemonmilkbolditalic-webfont.woff') format('woff');\r\n\tfont-weight: normal;\r\n\tfont-style: normal;\r\n}\r\n\r\n@font-face {\r\n\tfont-family: 'lemonmilk-light';\r\n\tsrc: url('../fonts/lemonmilk/lemonmilklight-webfont.woff2') format('woff2'),\r\n\t\t url('../fonts/lemonmilk/lemonmilklight-webfont.woff') format('woff');\r\n\tfont-weight: normal;\r\n\tfont-style: normal;\r\n}\r\n\r\n@font-face {\r\n\tfont-family: 'lemonmilk-light__italic';\r\n\tsrc: url('../fonts/lemonmilk/lemonmilklightitalic-webfont.woff2') format('woff2'),\r\n\t\t url('../fonts/lemonmilk/lemonmilklightitalic-webfont.woff') format('woff');\r\n\tfont-weight: normal;\r\n\tfont-style: normal;\r\n}\r\n\r\n\r\n/*\r\nThe following is based of Typebase:\r\nhttps://github.com/devinhunt/typebase.css\r\nI've edited it a bit, but it's a nice starting point.\r\n*/\r\n\r\n\r\n// font stacks\r\n$sans-serif:\t\t\t\t\"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n$serif:\t\t\t\t\t\t\"Georgia\", Cambria, Times New Roman, Times, serif;\r\n$lato:\t\t\t\t\t\t'Lato', $sans-serif;\r\n$roboto:\t\t\t\t\t'Roboto', $sans-serif;\r\n$oswald: \t\t\t\t\t'Oswald', $sans-serif;\r\n$lemonmilk-regular:\t\t\tlemonmilk-regular, $lato;\r\n$lemonmilk-regular-italic:\tlemonmilk-regular__italic, $lato;\r\n$lemonmilk-bold:\t\t\tlemonmilk-bold, $lato;\r\n$lemonmilk-bold__italic:\tlemonmilk-bold__italic, $lato;\r\n$lemonmilk-light:\t\t\tlemonmilk-light, $lato;\r\n$lemonmilk-light-italic:\tlemonmilk-light__italic, $lato;\r\n\r\n/*\r\nsome nice typographical defaults\r\nmore here: http://www.newnet-soft.com/blog/csstypography\r\n*/\r\np {\r\n  -ms-word-wrap: break-word;\r\n  word-break: break-word; //non-standart css for webkit\r\n  word-wrap: break-word;\r\n  // cleaning up the ragged lines and breaks\r\n  -webkit-hyphens: auto;\r\n\t -moz-hyphens: auto;\r\n\t\t  hyphens: auto;\r\n  // sets a minimum number of characters before and after the break\r\n  -webkit-hyphenate-before: 2;\r\n   -webkit-hyphenate-after: 3;\r\n\t\t   hyphenate-lines: 3;\r\n  /* enabling fancy ligatures when available\r\n  -webkit-font-feature-settings: \"liga\", \"dlig\";\r\n   -moz-font-feature-settings: \"liga=1, dlig=1\";\r\n\t  -ms-font-feature-settings: \"liga\", \"dlig\";\r\n\t   -o-font-feature-settings: \"liga\", \"dlig\";\r\n\t\t  font-feature-settings: \"liga\", \"dlig\";\r\n\t*/\r\n}\r\n\r\n","/******************************************************************\r\nSite Name:\r\nAuthor:\r\n\r\nStylesheet: Mixins Stylesheet\r\n\r\nThis is where you can take advantage of Sass' great features: Mixins.\r\nI won't go in-depth on how they work exactly,\r\nthere are a few articles below that will help do that. What I will\r\ntell you is that this will help speed up simple changes like\r\nchanging a color or adding CSS3 techniques gradients.\r\n\r\nA WORD OF WARNING: It's very easy to overdo it here. Be careful and\r\nremember less is more.\r\n\r\nHelpful:\r\nhttp://sachagreif.com/useful-sass-mixins/\r\nhttp://thesassway.com/intermediate/leveraging-sass-mixins-for-cleaner-code\r\nhttp://web-design-weekly.com/blog/2013/05/12/handy-sass-mixins/\r\n\r\n******************************************************************/\r\n\r\n\r\n/*********************\r\nTRANSITION\r\n*********************/\r\n\r\n/*\r\nI totally rewrote this to be cleaner and easier to use.\r\nYou'll need to be using Sass 3.2+ for these to work.\r\nThanks to @anthonyshort for the inspiration on these.\r\nUSAGE: @include transition(all 0.2s ease-in-out);\r\n*/\r\n\r\n@mixin transition($transition...) {\r\n  // defining prefixes so we can use them in mixins below\r\n  $prefixes:      (\"-webkit-\", \"\" );\r\n  @each $prefix in $prefixes {\r\n    #{$prefix}transition: $transition;\r\n  }\r\n}\r\n\r\n/*********************\r\nCSS3 GRADIENTS\r\nBe careful with these since they can\r\nreally slow down your CSS. Don't overdo it.\r\n*********************/\r\n\r\n/* @include css-gradient(#dfdfdf,#f8f8f8); */\r\n@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {\r\n\tbackground-color: $to;\r\n\tbackground-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));\r\n\tbackground-image: -webkit-linear-gradient(top, $from, $to);\r\n\tbackground-image: -moz-linear-gradient(top, $from, $to);\r\n\tbackground-image: -o-linear-gradient(top, $from, $to);\r\n\tbackground-image: linear-gradient(to bottom, $from, $to);\r\n}\r\n\r\n/*********************\r\nBOX SIZING\r\n*********************/\r\n\r\n/* @include box-sizing(border-box); */\r\n/* NOTE: value of \"padding-box\" is only supported in Gecko. So\r\nprobably best not to use it. I mean, were you going to anyway? */\r\n@mixin box-sizing($type: border-box) {\r\n\t-webkit-box-sizing: $type;\r\n\t-moz-box-sizing:    $type;\r\n\t-ms-box-sizing:     $type;\r\n\tbox-sizing:         $type;\r\n}\r\n\r\n\r\n","/******************************************************************\r\nSite Name:\r\nAuthor:\r\n\r\nStylesheet: IE Grid Styles\r\n\r\nSince the example grid is based on media queries, so rather than\r\nsetup some js library that would make IE8 and below understand\r\nmedia queries, let's just add some styles that serves a fixed grid.\r\n\r\nAgain, if you want to roll your own, just remove this junk and put\r\nwhatever you use in here.\r\n\r\n******************************************************************/"]}